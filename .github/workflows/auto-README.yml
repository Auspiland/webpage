name: Auto Update README with LLM

on:
  push:
    paths:
      - "./**"            # ← 감시할 디렉터리(예시)
      - "!README.md"         # README 변경만으로는 트리거하지 않음(루프 방지)
  schedule:
    - cron: "0 18 * * *"     # 매일 03:00 KST = 18:00 UTC
  workflow_dispatch:          # 수동 실행도 가능

permissions:
  contents: write             # README 자동 커밋을 위해 필요

env:
  TARGET_DIR: "."            # 감시 디렉터리
  README_PATH: README.md      # 갱신 대상 파일
  SECTION_START: "<!-- AUTO-UPDATE:START -->"
  SECTION_END: "<!-- AUTO-UPDATE:END -->"
  LAST_SHA_START: "<!-- LAST_PROCESSED_SHA:"
  LAST_SHA_END: "-->"
  LLM_MODEL: gpt-5-mini           # 전체 README 구조 유지를 위해 강력한 모델 사용
  MAX_DIFF_BYTES: "100000"    # 4개 섹션 분석을 위해 증가

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0    # diff/로그 계산을 위해 전체 가져오기

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install openai==1.* gitpython==3.* tenacity==8.*

      - name: Run updater
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}   # ← 레포/Org Secret에 설정
        run: |
          python .github/scripts/update_readme.py \
            --target-dir "$TARGET_DIR" \
            --readme "$README_PATH" \
            --llm-model "$LLM_MODEL" \
            --section-start "$SECTION_START" \
            --section-end "$SECTION_END" \
            --last-sha-start "$LAST_SHA_START" \
            --last-sha-end "$LAST_SHA_END" \
            --max-diff-bytes "$MAX_DIFF_BYTES"

      - name: Commit & Push if changed
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "readme-bot"
            git config user.email "readme-bot@users.noreply.github.com"
            git add -A
            git commit -m "chore(readme): auto-update via LLM [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi
